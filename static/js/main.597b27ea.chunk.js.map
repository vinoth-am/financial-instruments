{"version":3,"sources":["constants/index.ts","app/components/Filter/Filter.tsx","app/components/Table/Table.tsx","utils/index.js","services/index.ts","app/screens/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["INTRUMENTS_RESPONSE_KEY","SORTED_ASSERT_CLASS","INTRUMENTS_FILTER","Select","Ticker","Price","AssetClass","sortData","event","source","sortBy","target","value","sort","first","second","ticker","sortTicker","price","sortPrice","indexOf","assetClass","sortAssetClass","Filter","props","className","onChange","e","Object","keys","map","key","Table","data","heading","tableHeader","sorting","width","useState","getData","setData","tableWidth","useEffect","style","paddingLeft","sortedData","newData","header","string","charAt","toUpperCase","substring","index","toLowerCase","response","Home","App","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.597b27ea.chunk.js","sourcesContent":["export const INTRUMENTS_RESPONSE_KEY: string[] = [\n  \"ticker\",\n  \"price\",\n  \"assetClass\",\n];\nexport const SORTED_ASSERT_CLASS: string[] = [\"Equities\", \"Macro\", \"Credit\"];\n\nexport const INTRUMENTS_FILTER: {\n  [key: string]: string;\n} = {\n  Select: \"\",\n  Ticker: \"ticker\",\n  Price: \"price\",\n  AssetClass: \"assetClass\",\n};\n\nexport const TABLE_HEADING = \"Financial Instruments Data\";\nexport const SORT_BY = \"Sortby\";\n","import React from \"react\";\nimport \"./filterstyles.css\";\nimport { INTRUMENTS_FILTER, SORTED_ASSERT_CLASS } from \"../../../constants\";\nimport { ITableData } from \"../Table/types\";\nimport { IFilterProps } from \"./types\";\n/**\n *\n * @param source Unsorted array of objects\n * @returns It returns ticker in alphabetical order.\n */\n\nconst sortTicker = (source: ITableData[]) => {\n  return source.sort((first: ITableData, second: ITableData) => {\n    if (first.ticker > second.ticker) {\n      return 1;\n    }\n    if (first.ticker < second.ticker) {\n      return -1;\n    }\n    return 0;\n  });\n};\n\n/**\n *\n * @param source Unsorted array of objects\n * @returns Return price in descending order.\n */\n\nconst sortPrice = (source: ITableData[]) => {\n  return source.sort(\n    (first: ITableData, second: ITableData) => second.price - first.price\n  );\n};\n\n/**\n *\n * @param source Unsorted array of objects\n * @returns It returns sorted array of objects based on input ticker array.\n */\n\nconst sortAssetClass = (source: ITableData[]) => {\n  return source.sort((first: ITableData, second: ITableData) => {\n    return (\n      SORTED_ASSERT_CLASS.indexOf(first.assetClass) -\n      SORTED_ASSERT_CLASS.indexOf(second.assetClass)\n    );\n  });\n};\n\nconst sortData = (\n  event: React.ChangeEvent<{ value: string }>,\n  source: ITableData[],\n  sortBy: (data: ITableData[]) => void\n) => {\n  const selectedOption = event.target.value;\n  switch (selectedOption) {\n    case INTRUMENTS_FILTER.Ticker:\n      const resultTicker = sortTicker(source);\n      sortBy(resultTicker);\n      break;\n\n    case INTRUMENTS_FILTER.Price:\n      const resultPrice = sortPrice(source);\n      sortBy(resultPrice);\n      break;\n\n    case INTRUMENTS_FILTER.AssetClass:\n      const resultAssetClass = sortAssetClass(source);\n      sortBy(resultAssetClass);\n      break;\n  }\n};\n\nexport const Filter = (props: IFilterProps) => {\n  const { sortBy, source } = props;\n\n  return (\n    <select className=\"filter\" onChange={(e) => sortData(e, source, sortBy)}>\n      {Object.keys(INTRUMENTS_FILTER).map((key) => {\n        return (\n          <option key={key} value={INTRUMENTS_FILTER[key]}>\n            {key}\n          </option>\n        );\n      })}\n    </select>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./tablestyles.css\";\nimport { Filter } from \"../Filter/Filter\";\nimport { capitalizeFirst } from \"../../../utils\";\nimport { SORT_BY } from \"../../../constants\";\nimport { ITableData, ITableProps } from \"./types\";\n\nexport const Table = (props: ITableProps) => {\n  const { data, heading, tableHeader, sorting, width } = props;\n  const [getData, setData] = useState<ITableData[]>([]);\n\n  const tableWidth = width || 80;\n\n  useEffect(() => {\n    setData(data);\n  }, [data]);\n\n  const sortBy = (sortedData: ITableData[]) => {\n    const newData = [...sortedData];\n    setData(newData);\n  };\n\n  return (\n    /* Table Title section */\n    <div\n      className=\"container\"\n      style={{ width: tableWidth > 100 ? \"100%\" : `${tableWidth}%` }}\n    >\n      <div className=\"header\">\n        <h3 style={{ paddingLeft: 10 }}>{heading}</h3>\n        {sorting && (\n          <div className=\"header-right\">\n            <h4>{SORT_BY}</h4>\n            <Filter source={getData} sortBy={sortBy} />\n          </div>\n        )}\n      </div>\n\n      {/* Table Header section */}\n      <table className=\"instruments-table\">\n        <tbody>\n          <tr>\n            {tableHeader.map((header) => (\n              <th>{capitalizeFirst(header)}</th>\n            ))}\n          </tr>\n\n          {/* Table row section */}\n          {getData?.map((value: ITableData, index: number) => (\n            <tr\n              key={index}\n              className={`row-color-${value?.assetClass?.toLowerCase()}`}\n            >\n              <td>{value.ticker}</td>\n              <td className={value?.price < 0 ? \"price-red\" : \"price-blue\"}>\n                {value.price}\n              </td>\n              <td>{value?.assetClass}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","/**\n *\n * @param {*} string\n * @returns Capitalize first character and return\n */\n\nexport const capitalizeFirst = (string) => {\n  return string?.charAt(0).toUpperCase() + string?.substring(1);\n};\n","const response = [\n  {\n    ticker: \"ALPHA\",\n    price: 3150.67,\n    assetClass: \"Credit\",\n  },\n  {\n    ticker: \"BETA\",\n    price: 3791.37,\n    assetClass: \"Equities\",\n  },\n  {\n    ticker: \"GAMMA\",\n    price: -2299.1,\n    assetClass: \"Equities\",\n  },\n  {\n    ticker: \"DELTA\",\n    price: -3132.66,\n    assetClass: \"Equities\",\n  },\n  {\n    ticker: \"EPSILON\",\n    price: 1168.46,\n    assetClass: \"Credit\",\n  },\n  {\n    ticker: \"ZETA\",\n    price: 2716.78,\n    assetClass: \"Credit\",\n  },\n  {\n    ticker: \"ETA\",\n    price: 3089.2,\n    assetClass: \"Macro\",\n  },\n  {\n    ticker: \"THETA\",\n    price: 1075.44,\n    assetClass: \"Macro\",\n  },\n  {\n    ticker: \"IOTA\",\n    price: 1096.64,\n    assetClass: \"Macro\",\n  },\n  {\n    ticker: \"KAPPA\",\n    price: 2321.17,\n    assetClass: \"Credit\",\n  },\n  {\n    ticker: \"LAMBDA\",\n    price: 1472.2,\n    assetClass: \"Credit\",\n  },\n  {\n    ticker: \"MU\",\n    price: 2136.64,\n    assetClass: \"Macro\",\n  },\n  {\n    ticker: \"NU\",\n    price: 2744.89,\n    assetClass: \"Macro\",\n  },\n  {\n    ticker: \"OMIKRON\",\n    price: 2735.1,\n    assetClass: \"Equities\",\n  },\n  {\n    ticker: \"SIGMA\",\n    price: 1854.19,\n    assetClass: \"Equities\",\n  },\n  {\n    ticker: \"TAU\",\n    price: 2082.71,\n    assetClass: \"Macro\",\n  },\n  {\n    ticker: \"OMEGA\",\n    price: 2306.35,\n    assetClass: \"Equities\",\n  },\n  {\n    ticker: \"PSI\",\n    price: 2997.78,\n    assetClass: \"Credit\",\n  },\n];\n\nexport default response;\n","import React from \"react\";\nimport { Table } from \"../components/Table/Table\";\nimport response from \"../../services\";\nimport { INTRUMENTS_RESPONSE_KEY, TABLE_HEADING } from \"../../constants\";\n\nexport const Home = () => {\n  return (\n    <Table\n      data={response}\n      heading={TABLE_HEADING}\n      sorting={true}\n      tableHeader={INTRUMENTS_RESPONSE_KEY}\n      width={80}\n    />\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { Home } from \"./app/screens/Home\";\n\n/**\n Here authentication and route configuration can handle.\n */\n\nfunction App() {\n  return (\n    <Fragment>\n      <h1 style={{ marginLeft: \"150px\" }}>Welcome !</h1>\n      <Home />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}